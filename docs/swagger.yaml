basePath: /
definitions:
  models.SignIn:
    properties:
      id:
        type: integer
      password:
        type: string
      username:
        type: string
    type: object
  models.User:
    properties:
      email:
        type: string
      id:
        type: integer
      password:
        type: string
      username:
        type: string
    type: object
host: localhost:8005
info:
  contact: {}
  description: This is a file analyser application API built with Go and Gin.
  title: File Analyser
  version: "2.0"
paths:
  /signin:
    post:
      consumes:
      - application/json
      description: Authenticate a user and return a JWT token
      parameters:
      - description: User credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/models.SignIn'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      summary: User SignIn
      tags:
      - Authentication
  /signup:
    post:
      consumes:
      - application/json
      description: Register a new user
      parameters:
      - description: User Data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "201":
          description: User created successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: User SignUp
      tags:
      - Authentication
  /upload:
    post:
      consumes:
      - multipart/form-data
      description: Allows an authenticated user to upload a file for analysis. The
        file is split into chunks, and each chunk is analyzed separately.
      parameters:
      - description: File to be uploaded
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: File uploaded successfully with chunked analysis
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Failed to read uploaded file
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: User not found or unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Upload and analyze a file
      tags:
      - File
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
